/*
 * generated by Xtext 2.12.0
 */
grammar InternalTowerDefense;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.services.TowerDefenseGrammarAccess;

}
@parser::members {
	private TowerDefenseGrammarAccess grammarAccess;

	public void setGrammarAccess(TowerDefenseGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleJeu
entryRuleJeu
:
{ before(grammarAccess.getJeuRule()); }
	 ruleJeu
{ after(grammarAccess.getJeuRule()); } 
	 EOF 
;

// Rule Jeu
ruleJeu 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJeuAccess().getGroup()); }
		(rule__Jeu__Group__0)
		{ after(grammarAccess.getJeuAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartieRule
entryRulePartieRule
:
{ before(grammarAccess.getPartieRuleRule()); }
	 rulePartieRule
{ after(grammarAccess.getPartieRuleRule()); } 
	 EOF 
;

// Rule PartieRule
rulePartieRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartieRuleAccess().getGroup()); }
		(rule__PartieRule__Group__0)
		{ after(grammarAccess.getPartieRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePartieElement
entryRulePartieElement
:
{ before(grammarAccess.getPartieElementRule()); }
	 rulePartieElement
{ after(grammarAccess.getPartieElementRule()); } 
	 EOF 
;

// Rule PartieElement
rulePartieElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartieElementAccess().getGroup()); }
		(rule__PartieElement__Group__0)
		{ after(grammarAccess.getPartieElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNiveau
entryRuleNiveau
:
{ before(grammarAccess.getNiveauRule()); }
	 ruleNiveau
{ after(grammarAccess.getNiveauRule()); } 
	 EOF 
;

// Rule Niveau
ruleNiveau 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNiveauAccess().getGroup()); }
		(rule__Niveau__Group__0)
		{ after(grammarAccess.getNiveauAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jeu__Group__0__Impl
	rule__Jeu__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJeuAccess().getJeuKeyword_0()); }
	'Jeu'
	{ after(grammarAccess.getJeuAccess().getJeuKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jeu__Group__1__Impl
	rule__Jeu__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJeuAccess().getNameAssignment_1()); }
	(rule__Jeu__NameAssignment_1)
	{ after(grammarAccess.getJeuAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jeu__Group__2__Impl
	rule__Jeu__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJeuAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getJeuAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jeu__Group__3__Impl
	rule__Jeu__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJeuAccess().getPartiesAssignment_3()); }
	(rule__Jeu__PartiesAssignment_3)*
	{ after(grammarAccess.getJeuAccess().getPartiesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Jeu__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJeuAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getJeuAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartieRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__0__Impl
	rule__PartieRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getPartieKeyword_0()); }
	'Partie'
	{ after(grammarAccess.getPartieRuleAccess().getPartieKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__1__Impl
	rule__PartieRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getNameAssignment_1()); }
	(rule__PartieRule__NameAssignment_1)
	{ after(grammarAccess.getPartieRuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__2__Impl
	rule__PartieRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPartieRuleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__3__Impl
	rule__PartieRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getPartiesElementsAssignment_3()); }
	(rule__PartieRule__PartiesElementsAssignment_3)*
	{ after(grammarAccess.getPartieRuleAccess().getPartiesElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__4__Impl
	rule__PartieRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getNiveauxAssignment_4()); }
	(rule__PartieRule__NiveauxAssignment_4)*
	{ after(grammarAccess.getPartieRuleAccess().getNiveauxAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieRule__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieRuleAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getPartieRuleAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PartieElement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieElement__Group__0__Impl
	rule__PartieElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieElement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieElementAccess().getPartieElementKeyword_0()); }
	'PartieElement'
	{ after(grammarAccess.getPartieElementAccess().getPartieElementKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieElement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PartieElement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieElement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartieElementAccess().getNameAssignment_1()); }
	(rule__PartieElement__NameAssignment_1)
	{ after(grammarAccess.getPartieElementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Niveau__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Niveau__Group__0__Impl
	rule__Niveau__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Niveau__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNiveauAccess().getNiveauKeyword_0()); }
	'Niveau'
	{ after(grammarAccess.getNiveauAccess().getNiveauKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Niveau__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Niveau__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Niveau__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNiveauAccess().getNameAssignment_1()); }
	(rule__Niveau__NameAssignment_1)
	{ after(grammarAccess.getNiveauAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Jeu__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJeuAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getJeuAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Jeu__PartiesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJeuAccess().getPartiesPartieRuleParserRuleCall_3_0()); }
		rulePartieRule
		{ after(grammarAccess.getJeuAccess().getPartiesPartieRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartieRuleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPartieRuleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__PartiesElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartieRuleAccess().getPartiesElementsPartieElementParserRuleCall_3_0()); }
		rulePartieElement
		{ after(grammarAccess.getPartieRuleAccess().getPartiesElementsPartieElementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieRule__NiveauxAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartieRuleAccess().getNiveauxNiveauParserRuleCall_4_0()); }
		ruleNiveau
		{ after(grammarAccess.getPartieRuleAccess().getNiveauxNiveauParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PartieElement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartieElementAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPartieElementAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Niveau__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNiveauAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNiveauAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
