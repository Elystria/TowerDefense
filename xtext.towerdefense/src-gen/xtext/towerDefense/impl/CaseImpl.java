/**
 * generated by Xtext 2.12.0
 */
package xtext.towerDefense.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.towerDefense.Case;
import xtext.towerDefense.NatureTerrain;
import xtext.towerDefense.TowerDefensePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Case</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.towerDefense.impl.CaseImpl#getI <em>I</em>}</li>
 *   <li>{@link xtext.towerDefense.impl.CaseImpl#getJ <em>J</em>}</li>
 *   <li>{@link xtext.towerDefense.impl.CaseImpl#getNatureTerrain <em>Nature Terrain</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CaseImpl extends MinimalEObjectImpl.Container implements Case
{
  /**
   * The default value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected static final int I_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getI() <em>I</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI()
   * @generated
   * @ordered
   */
  protected int i = I_EDEFAULT;

  /**
   * The default value of the '{@link #getJ() <em>J</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJ()
   * @generated
   * @ordered
   */
  protected static final int J_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getJ() <em>J</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJ()
   * @generated
   * @ordered
   */
  protected int j = J_EDEFAULT;

  /**
   * The cached value of the '{@link #getNatureTerrain() <em>Nature Terrain</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNatureTerrain()
   * @generated
   * @ordered
   */
  protected NatureTerrain natureTerrain;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TowerDefensePackage.Literals.CASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getI()
  {
    return i;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setI(int newI)
  {
    int oldI = i;
    i = newI;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.CASE__I, oldI, i));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getJ()
  {
    return j;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setJ(int newJ)
  {
    int oldJ = j;
    j = newJ;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.CASE__J, oldJ, j));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NatureTerrain getNatureTerrain()
  {
    return natureTerrain;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetNatureTerrain(NatureTerrain newNatureTerrain, NotificationChain msgs)
  {
    NatureTerrain oldNatureTerrain = natureTerrain;
    natureTerrain = newNatureTerrain;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, TowerDefensePackage.CASE__NATURE_TERRAIN, oldNatureTerrain, newNatureTerrain);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNatureTerrain(NatureTerrain newNatureTerrain)
  {
    if (newNatureTerrain != natureTerrain)
    {
      NotificationChain msgs = null;
      if (natureTerrain != null)
        msgs = ((InternalEObject)natureTerrain).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - TowerDefensePackage.CASE__NATURE_TERRAIN, null, msgs);
      if (newNatureTerrain != null)
        msgs = ((InternalEObject)newNatureTerrain).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - TowerDefensePackage.CASE__NATURE_TERRAIN, null, msgs);
      msgs = basicSetNatureTerrain(newNatureTerrain, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.CASE__NATURE_TERRAIN, newNatureTerrain, newNatureTerrain));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case TowerDefensePackage.CASE__NATURE_TERRAIN:
        return basicSetNatureTerrain(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TowerDefensePackage.CASE__I:
        return getI();
      case TowerDefensePackage.CASE__J:
        return getJ();
      case TowerDefensePackage.CASE__NATURE_TERRAIN:
        return getNatureTerrain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TowerDefensePackage.CASE__I:
        setI((Integer)newValue);
        return;
      case TowerDefensePackage.CASE__J:
        setJ((Integer)newValue);
        return;
      case TowerDefensePackage.CASE__NATURE_TERRAIN:
        setNatureTerrain((NatureTerrain)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TowerDefensePackage.CASE__I:
        setI(I_EDEFAULT);
        return;
      case TowerDefensePackage.CASE__J:
        setJ(J_EDEFAULT);
        return;
      case TowerDefensePackage.CASE__NATURE_TERRAIN:
        setNatureTerrain((NatureTerrain)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TowerDefensePackage.CASE__I:
        return i != I_EDEFAULT;
      case TowerDefensePackage.CASE__J:
        return j != J_EDEFAULT;
      case TowerDefensePackage.CASE__NATURE_TERRAIN:
        return natureTerrain != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (i: ");
    result.append(i);
    result.append(", j: ");
    result.append(j);
    result.append(')');
    return result.toString();
  }

} //CaseImpl
