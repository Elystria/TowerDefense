/**
 * generated by Xtext 2.12.0
 */
package xtext.towerDefense.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.towerDefense.PartieElement;
import xtext.towerDefense.TowerDefensePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Partie Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.towerDefense.impl.PartieElementImpl#getObstacle <em>Obstacle</em>}</li>
 *   <li>{@link xtext.towerDefense.impl.PartieElementImpl#getMobile <em>Mobile</em>}</li>
 *   <li>{@link xtext.towerDefense.impl.PartieElementImpl#getProjectile <em>Projectile</em>}</li>
 *   <li>{@link xtext.towerDefense.impl.PartieElementImpl#getNature <em>Nature</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PartieElementImpl extends MinimalEObjectImpl.Container implements PartieElement
{
  /**
   * The default value of the '{@link #getObstacle() <em>Obstacle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObstacle()
   * @generated
   * @ordered
   */
  protected static final String OBSTACLE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getObstacle() <em>Obstacle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObstacle()
   * @generated
   * @ordered
   */
  protected String obstacle = OBSTACLE_EDEFAULT;

  /**
   * The default value of the '{@link #getMobile() <em>Mobile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMobile()
   * @generated
   * @ordered
   */
  protected static final String MOBILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getMobile() <em>Mobile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMobile()
   * @generated
   * @ordered
   */
  protected String mobile = MOBILE_EDEFAULT;

  /**
   * The default value of the '{@link #getProjectile() <em>Projectile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProjectile()
   * @generated
   * @ordered
   */
  protected static final String PROJECTILE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProjectile() <em>Projectile</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProjectile()
   * @generated
   * @ordered
   */
  protected String projectile = PROJECTILE_EDEFAULT;

  /**
   * The default value of the '{@link #getNature() <em>Nature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNature()
   * @generated
   * @ordered
   */
  protected static final String NATURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNature() <em>Nature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNature()
   * @generated
   * @ordered
   */
  protected String nature = NATURE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PartieElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return TowerDefensePackage.Literals.PARTIE_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getObstacle()
  {
    return obstacle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setObstacle(String newObstacle)
  {
    String oldObstacle = obstacle;
    obstacle = newObstacle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.PARTIE_ELEMENT__OBSTACLE, oldObstacle, obstacle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getMobile()
  {
    return mobile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMobile(String newMobile)
  {
    String oldMobile = mobile;
    mobile = newMobile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.PARTIE_ELEMENT__MOBILE, oldMobile, mobile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getProjectile()
  {
    return projectile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProjectile(String newProjectile)
  {
    String oldProjectile = projectile;
    projectile = newProjectile;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.PARTIE_ELEMENT__PROJECTILE, oldProjectile, projectile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNature()
  {
    return nature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNature(String newNature)
  {
    String oldNature = nature;
    nature = newNature;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, TowerDefensePackage.PARTIE_ELEMENT__NATURE, oldNature, nature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case TowerDefensePackage.PARTIE_ELEMENT__OBSTACLE:
        return getObstacle();
      case TowerDefensePackage.PARTIE_ELEMENT__MOBILE:
        return getMobile();
      case TowerDefensePackage.PARTIE_ELEMENT__PROJECTILE:
        return getProjectile();
      case TowerDefensePackage.PARTIE_ELEMENT__NATURE:
        return getNature();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case TowerDefensePackage.PARTIE_ELEMENT__OBSTACLE:
        setObstacle((String)newValue);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__MOBILE:
        setMobile((String)newValue);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__PROJECTILE:
        setProjectile((String)newValue);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__NATURE:
        setNature((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case TowerDefensePackage.PARTIE_ELEMENT__OBSTACLE:
        setObstacle(OBSTACLE_EDEFAULT);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__MOBILE:
        setMobile(MOBILE_EDEFAULT);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__PROJECTILE:
        setProjectile(PROJECTILE_EDEFAULT);
        return;
      case TowerDefensePackage.PARTIE_ELEMENT__NATURE:
        setNature(NATURE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case TowerDefensePackage.PARTIE_ELEMENT__OBSTACLE:
        return OBSTACLE_EDEFAULT == null ? obstacle != null : !OBSTACLE_EDEFAULT.equals(obstacle);
      case TowerDefensePackage.PARTIE_ELEMENT__MOBILE:
        return MOBILE_EDEFAULT == null ? mobile != null : !MOBILE_EDEFAULT.equals(mobile);
      case TowerDefensePackage.PARTIE_ELEMENT__PROJECTILE:
        return PROJECTILE_EDEFAULT == null ? projectile != null : !PROJECTILE_EDEFAULT.equals(projectile);
      case TowerDefensePackage.PARTIE_ELEMENT__NATURE:
        return NATURE_EDEFAULT == null ? nature != null : !NATURE_EDEFAULT.equals(nature);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (Obstacle: ");
    result.append(obstacle);
    result.append(", Mobile: ");
    result.append(mobile);
    result.append(", Projectile: ");
    result.append(projectile);
    result.append(", Nature: ");
    result.append(nature);
    result.append(')');
    return result.toString();
  }

} //PartieElementImpl
